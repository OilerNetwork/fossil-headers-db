name: Deploy to Remote Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: (Optional) Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # Step 2: SSH into the remote server and run deployment commands
      - name: SSH into Remote Server and Deploy Changes
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ec2-3-87-142-202.compute-1.amazonaws.com
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          # Use 'envs' to pass environment variables to the remote server
          envs: |
            DB_CONNECTION_STRING_BACKUP=${{ secrets.DB_CONNECTION_STRING_BACKUP }}
            NODE_CONNECTION_STRING=${{ secrets.NODE_CONNECTION_STRING }}
            ROUTER_ENDPOINT=${{ secrets.ROUTER_ENDPOINT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
              script: |
                # Navigate to the project directory
                cd ~/fossil-headers-db

            # Pull the latest changes from the main branch
            git fetch origin main
            git reset --hard origin/main

            # Create or update the .env file with secrets
            cat > .env << EOF
            DB_CONNECTION_STRING_BACKUP=${DB_CONNECTION_STRING_BACKUP}
            NODE_CONNECTION_STRING=${NODE_CONNECTION_STRING}
            ROUTER_ENDPOINT=${ROUTER_ENDPOINT}
            POSTGRES_USER=${POSTGRES_USER}
            POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            POSTGRES_DB=${POSTGRES_DB}
            EOF

            # Ensure Docker and Docker Compose are installed
            docker --version || { echo "Docker not found"; exit 1; }
            docker-compose --version || { echo "Docker Compose not found"; exit 1; }

            # Build and run the Docker Compose services
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d

